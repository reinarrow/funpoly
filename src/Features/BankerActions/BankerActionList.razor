@using Funpoly.Core
@using Funpoly.Data.Repositories.Interfaces
@using Funpoly.Data.Models
@inject IRepository<SurpriseCard> surpriseCardRepository
@inject IRepository<Transport> transportRepository
@inject IGameManager gameManager

<Column>
    <Row>
        <Column>
            <BankerActionListItem IconSource="image/speed.png"
                                  ModalTitle="Multar por exceso de velocidad"
                                  ModalAction="FinePerSpeedLimit">
            </BankerActionListItem>
        </Column>

        <Column>
            <BankerActionListItem IconSource="image/surprise.png"
                                  ModalTitle="Coger tarjeta sorpresa"
                                  ModalAction="GetSurpriseCard">
            </BankerActionListItem>
        </Column>
    </Row>

    <Row>
        <Column>
            <BankerActionListItem IconSource="image/lottery.png"
                                  ModalTitle="Entregar lotería"
                                  ModalAction="GiveLotteryPrize">
            </BankerActionListItem>
        </Column>

        <Column>
            <BankerActionListItem IconSource="image/turn.png"
                                  ModalTitle="Registrar vuelta"
                                  ModalAction="ShowLapModal">
            </BankerActionListItem>
        </Column>
    </Row>
</Column>

<Modal @ref="@surpriseCardModalRef">
    <ModalContent Centered="true">
        <ModalHeader>
            <ModalTitle>
                Carta sorpresa
            </ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Label>
                @surpriseCardText
            </Label>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="@registerLapModalRef">
    <ModalContent Centered="true">
        <ModalHeader>
            <ModalTitle>
                Registrar vuelta
            </ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Nuevo transporte</FieldLabel>
                <Select TValue="int?" @bind-SelectedValue="@modalTransportId">
                    @foreach (var transport in availableTransports)
                    {
                        // Only show the team's current transport and other free transports (not assigned to other teams)
                        @if (!gameManager.GetGame().Teams.Any(team => team.Id != modalSelectedTeam && team.TransportId == transport.Id))
                        {
                            <SelectItem Value="@transport.Id">
                                @transport.Name
                            </SelectItem>
                        }
                    }
                </Select>
            </Field>
            <Field>
                <FieldLabel>Días empleados en la vuelta</FieldLabel>
                <NumericEdit @bind-Value="modalTravelDays" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="HideLapModal">Cancelar</Button>
            <Button Color="Color.Primary" Clicked="RegisterLap">Aceptar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>