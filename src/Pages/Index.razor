@page  "/"
@page  "/{bankerToken}"

@using System
@using Funpoly.Services
@using Funpoly.Data.Models

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject ICoordinationManager CoordinationManager

@if (isInitialised)
{
    @if (isBanker)
    {
        <button @onclick="@OnStartButtonClick"> Iniciar </button>
    }
    else
    {
        <h3 class="text-center">
            El banquero está ordenando los billetes. Espera un poco...
        </h3>
    }
}

@code {
    [Parameter]
    public string bankerToken { get; set; }
    private bool isBanker = false;
    private bool isInitialised = false;

    protected override async Task OnInitializedAsync()
    {
        isInitialised = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!isInitialised)
        {
            // Check token
            var envToken = Environment.GetEnvironmentVariable("BANKER_TOKEN");

            if (bankerToken != null && bankerToken == envToken)
            {
                await localStorage.SetItemAsync("bankerCookie", "true");
            }

            //Get cookie (needs to be done to work on redirection)
            var cookieContent = await localStorage.GetItemAsync<string>("bankerCookie");

            if (cookieContent != null && cookieContent == "true")
            {
                isBanker = true;
            }

            // Obtain the game status to navigate to the correct view.
            await CoordinationManager.TriggerUpdate();
            isInitialised = true;
            StateHasChanged();
        }
    }

    private async Task OnStartButtonClick()
    {
        //Update game status
        await CoordinationManager.UpdateGameStatus(GameStatus.TeamsConfig);
    }

}